// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:773:1: 820:2>::prusti_post_item_push_a217979bbbcb45cf8baa41d5ce3c0285::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:773:1: 820:2>::prusti_post_item_push_a217979bbbcb45cf8baa41d5ce3c0285::{closure#0}(_1: &'_#14r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:50]) -> bool {
    debug self => (*((*_1).0: &'_#20r &'_#21r mut PrustiVec)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:13: 790:22
    debug val => (*((*_1).1: &'_#22r u8)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:24: 790:27
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:50
    let mut _2: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:43
    let mut _3: &'_#18r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:19
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:27: 789:42
    let mut _5: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:41
    let mut _6: &'_#19r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:35
    let mut _7: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:47: 789:50

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:43
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:19
        _3 = &'_#7r (*(*((*_1).0: &'_#8r &'_#9r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:19
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:27: 789:42
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:41
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:35
        _6 = &'_#10r (*(*((*_1).0: &'_#11r &'_#12r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:35
        _5 = PrustiVec::len(move _6) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:31: 789:41
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:36: 789:39
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec) -> usize {PrustiVec::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:40: 789:41
        _4 = prusti_contracts::old::<usize>(move _5) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:27: 789:42
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:27: 789:30
                                         // + literal: Const { ty: fn(usize) -> usize {prusti_contracts::old::<usize>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:41: 789:42
        _2 = PrustiVec::lookup(move _3, move _4) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:43
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:20: 789:26
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec, usize) -> u8 {PrustiVec::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:42: 789:43
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:42: 789:43
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:47: 789:50
        _7 = (*((*_1).1: &'_#13r u8));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:47: 789:50
        _0 = Eq(move _2, move _7);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:50
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:49: 789:50
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:49: 789:50
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:50: 789:50
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:789:15: 789:50
    }
}
