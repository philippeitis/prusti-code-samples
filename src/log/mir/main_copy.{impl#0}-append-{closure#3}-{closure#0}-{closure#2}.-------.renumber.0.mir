// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:8:1: 130:2>::append::{closure#3}::{closure#0}::{closure#2}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:8:1: 130:2>::append::{closure#3}::{closure#0}::{closure#2}(_1: &'_#15r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:90]) -> bool {
    debug self => (*((*_1).0: &'_#21r &'_#22r mut PrustiVec)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:104:15: 104:24
    debug j => (*((*_1).1: &'_#23r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:120:45: 120:46
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:90
    let mut _2: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:67
    let mut _3: &'_#19r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:57
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:65: 121:66
    let mut _5: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:71: 121:90
    let mut _6: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:89
    let mut _7: &'_#20r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:79
    let mut _8: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:87: 121:88

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:67
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:57
        _3 = &'_#7r (*(*((*_1).0: &'_#8r &'_#9r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:57
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:65: 121:66
        _4 = (*((*_1).1: &'_#10r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:65: 121:66
        _2 = PrustiVec::lookup(move _3, move _4) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:67
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:58: 121:64
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec, usize) -> u8 {PrustiVec::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:66: 121:67
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:66: 121:67
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:71: 121:90
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:89
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:79
        _7 = &'_#11r (*(*((*_1).0: &'_#12r &'_#13r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:79
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:87: 121:88
        _8 = (*((*_1).1: &'_#14r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:87: 121:88
        _6 = PrustiVec::lookup(move _7, move _8) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:75: 121:89
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:80: 121:86
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec, usize) -> u8 {PrustiVec::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:88: 121:89
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:88: 121:89
        _5 = prusti_contracts::old::<u8>(move _6) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:71: 121:90
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:71: 121:74
                                         // + literal: Const { ty: fn(u8) -> u8 {prusti_contracts::old::<u8>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:89: 121:90
        _0 = Eq(move _2, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:90
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:89: 121:90
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:89: 121:90
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:90: 121:90
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:121:53: 121:90
    }
}
