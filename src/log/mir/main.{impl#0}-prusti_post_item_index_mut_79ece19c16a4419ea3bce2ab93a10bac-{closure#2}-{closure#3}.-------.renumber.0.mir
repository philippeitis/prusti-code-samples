// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 184:2>::prusti_post_item_index_mut_79ece19c16a4419ea3bce2ab93a10bac::{closure#2}::{closure#3}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 184:2>::prusti_post_item_index_mut_79ece19c16a4419ea3bce2ab93a10bac::{closure#2}::{closure#3}(_1: &'_#15r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:50]) -> bool {
    debug self => (*((*_1).0: &'_#21r &'_#22r mut BoolArr)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:181:22: 181:31
    debug i => (*((*_1).1: &'_#23r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:177:14: 177:15
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:50
    let mut _2: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:27
    let mut _3: &'_#19r BoolArr;         // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:17
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:25: 178:26
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:31: 178:50
    let mut _6: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:49
    let mut _7: &'_#20r BoolArr;         // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:39
    let mut _8: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:47: 178:48

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:27
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:17
        _3 = &'_#7r (*(*((*_1).0: &'_#8r &'_#9r mut BoolArr))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:17
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:25: 178:26
        _4 = (*((*_1).1: &'_#10r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:25: 178:26
        _2 = BoolArr::lookup(move _3, move _4) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:27
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:18: 178:24
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr, usize) -> bool {BoolArr::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:26: 178:27
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:26: 178:27
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:31: 178:50
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:49
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:39
        _7 = &'_#11r (*(*((*_1).0: &'_#12r &'_#13r mut BoolArr))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:39
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:47: 178:48
        _8 = (*((*_1).1: &'_#14r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:47: 178:48
        _6 = BoolArr::lookup(move _7, move _8) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:35: 178:49
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:40: 178:46
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr, usize) -> bool {BoolArr::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:48: 178:49
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:48: 178:49
        _5 = prusti_contracts::old::<bool>(move _6) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:31: 178:50
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:31: 178:34
                                         // + literal: Const { ty: fn(bool) -> bool {prusti_contracts::old::<bool>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:49: 178:50
        _0 = Eq(move _2, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:50
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:49: 178:50
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:49: 178:50
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:50: 178:50
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:178:13: 178:50
    }
}
