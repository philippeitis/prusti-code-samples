// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:145:1: 423:2>::and::{closure#0}::{closure#1}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:145:1: 423:2>::and::{closure#0}::{closure#1}(_1: &'_#6r [closure@/home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:45]) -> bool {
    debug i => (*((*_1).0: &'_#8r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:347:13: 347:18
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:45
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:40

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:40
        _2 = (*((*_1).0: &'_#5r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:40
        _0 = Lt(move _2, const 32_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:39: 349:45
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:44: 349:45
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bytevec.rs:349:45: 349:45
    }
}
