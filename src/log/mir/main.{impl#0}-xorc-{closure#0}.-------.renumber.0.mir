// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 422:2>::xorc::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 422:2>::xorc::{closure#0}(_1: &'_#4r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10], _2: bool, _3: bool) -> bool {
    debug a => _2;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:14: 416:15
    debug b => _3;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:23: 416:24
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:35: 416:39
    let _4: ();                          // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    let _6: bool;                        // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    let mut _7: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:42: 416:43
    let mut _8: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:46: 416:47
    let _9: ();                          // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    let mut _10: bool;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    scope 1 {
    }
    scope 2 {
        debug result => _6;              // in scope 2 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        scope 3 {
        }
    }

    bb0: {
        StorageLive(_4);                 // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        StorageLive(_5);                 // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        _5 = const false;                // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        switchInt(move _5) -> [false: bb2, otherwise: bb1]; // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb1: {
        _4 = const ();                   // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        goto -> bb3;                     // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb2: {
        _4 = const ();                   // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:10: 417:10
        goto -> bb3;                     // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb3: {
        StorageDead(_5);                 // scope 1 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:9: 417:10
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:9: 417:10
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:42: 416:43
        _7 = _2;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:42: 416:43
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:46: 416:47
        _8 = _3;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:46: 416:47
        _6 = BitXor(move _7, move _8);   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:42: 416:47
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:46: 416:47
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:416:46: 416:47
        FakeRead(ForLet, _6);            // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        StorageLive(_9);                 // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        StorageLive(_10);                // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        _10 = const false;               // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        switchInt(move _10) -> [false: bb5, otherwise: bb4]; // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb4: {
        _9 = const ();                   // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        goto -> bb6;                     // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb5: {
        _9 = const ();                   // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:10: 417:10
        goto -> bb6;                     // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
    }

    bb6: {
        StorageDead(_10);                // scope 3 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:9: 417:10
        StorageDead(_9);                 // scope 2 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:9: 417:10
        _0 = _6;                         // scope 2 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:414:18: 417:10
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:9: 417:10
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:417:10: 417:10
    }
}
