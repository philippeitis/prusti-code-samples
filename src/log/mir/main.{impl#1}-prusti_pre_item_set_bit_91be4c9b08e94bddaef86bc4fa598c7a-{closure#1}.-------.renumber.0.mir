// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 767:2>::prusti_pre_item_set_bit_91be4c9b08e94bddaef86bc4fa598c7a::{closure#1}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 767:2>::prusti_pre_item_set_bit_91be4c9b08e94bddaef86bc4fa598c7a::{closure#1}(_1: &'_#11r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:48]) -> bool {
    debug index => (*((*_1).0: &'_#16r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:482:31: 482:36
    debug self => (*((*_1).1: &'_#17r &'_#18r mut BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:482:20: 482:29
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:48
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:35
    let mut _3: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:48
    let mut _4: &'_#15r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:42

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:35
        _2 = (*((*_1).0: &'_#7r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:35
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:48
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:42
        _4 = &'_#8r (*(*((*_1).1: &'_#9r &'_#10r mut BitVec32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:42
        _3 = BitVec32::len(move _4) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:38: 474:48
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:43: 474:46
                                         // + literal: Const { ty: for<'r> fn(&'r BitVec32) -> usize {BitVec32::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:47: 474:48
        _0 = Lt(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:48
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:47: 474:48
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:47: 474:48
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:48: 474:48
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:474:30: 474:48
    }
}
