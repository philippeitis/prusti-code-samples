// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::prusti_post_item_div_561d795d841b4fe985f6e7a8faeee340::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::prusti_post_item_div_561d795d841b4fe985f6e7a8faeee340::{closure#0}(_1: &'_#14r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:43]) -> bool {
    debug result => (*((*_1).0: &'_#20r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:772:5: 774:6
    debug self => (*((*_1).1: &'_#21r &'_#22r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:772:12: 772:17
    debug other => (*((*_1).2: &'_#23r &'_#24r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:772:19: 772:24
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:43
    let mut _2: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:23
    let mut _3: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43
    let mut _4: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:33
    let mut _5: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:36: 771:43
    let mut _6: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:23
        _2 = ((*((*_1).0: &'_#9r BitVec32)).0: u32); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:23
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:33
        _4 = ((*(*((*_1).1: &'_#10r &'_#11r BitVec32))).0: u32); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:33
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:36: 771:43
        _5 = ((*(*((*_1).2: &'_#12r &'_#13r BitVec32))).0: u32); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:36: 771:43
        _6 = Eq(_5, const 0_u32);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43
        assert(!move _6, "attempt to divide `{}` by zero", _4) -> [success: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43
    }

    bb1: {
        _3 = Div(move _4, move _5);      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:27: 771:43
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:42: 771:43
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:42: 771:43
        _0 = Eq(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:43
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:42: 771:43
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:42: 771:43
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:43: 771:43
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:771:15: 771:43
    }
}
