// MIR for `checked_add` 0 renumber

fn checked_add(_1: u32, _2: u32) -> (bool, u32) {
    debug a => _1;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:107:16: 107:17
    debug b => _2;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:107:24: 107:25
    let mut _0: (bool, u32);             // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:107:35: 107:46
    let mut _3: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:25
    let mut _4: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:9
    let mut _5: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
    let mut _6: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
    let mut _7: (u32, bool);             // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
    let mut _8: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21
    let mut _9: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:17
    let mut _10: u32;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:20: 109:21
    let mut _11: (u32, bool);            // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:25
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:9
        _4 = _1;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:9
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
        _6 = _2;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
        _7 = CheckedSub(const core::num::<impl u32>::MAX, _6); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
        assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", const core::num::<impl u32>::MAX, move _6) -> [success: bb1, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
    }

    bb1: {
        _5 = move (_7.0: u32);           // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:13: 108:25
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
        _3 = Le(move _4, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:8: 108:25
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:24: 108:25
        switchInt(move _3) -> [false: bb3, otherwise: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:5: 112:6
    }

    bb2: {
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:17
        _9 = _1;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:17
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:20: 109:21
        _10 = _2;                        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:20: 109:21
        _11 = CheckedAdd(_9, _10);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, move _10) -> [success: bb4, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21
    }

    bb3: {
        _0 = (const false, const 0_u32); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:111:9: 111:19
        goto -> bb5;                     // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:5: 112:6
    }

    bb4: {
        _8 = move (_11.0: u32);          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:16: 109:21
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:20: 109:21
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:20: 109:21
        _0 = (const true, move _8);      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:9: 109:22
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:109:21: 109:22
        goto -> bb5;                     // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:108:5: 112:6
    }

    bb5: {
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:112:5: 112:6
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:113:2: 113:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:107:1: 113:2
    }
}
