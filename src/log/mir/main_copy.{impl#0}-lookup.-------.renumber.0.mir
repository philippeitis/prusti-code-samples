// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:8:1: 130:2>::lookup` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:8:1: 130:2>::lookup(_1: &'_#5r PrustiVec, _2: usize) -> u8 {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:22:19: 22:24
    debug index => _2;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:22:26: 22:31
    let mut _0: u8;                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:22:43: 22:45
    let mut _3: &'_#6r u8;               // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:22
    let mut _4: &'_#7r std::vec::Vec<u8>; // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:15
    let mut _5: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:16: 23:21

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:22
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:15
        _4 = &'_#4r ((*_1).0: std::vec::Vec<u8>); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:15
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:16: 23:21
        _5 = _2;                         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:16: 23:21
        _3 = <std::vec::Vec<u8> as std::ops::Index<usize>>::index(move _4, move _5) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:22
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:22
                                         // + literal: Const { ty: for<'r> fn(&'r std::vec::Vec<u8>, usize) -> &'r <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _0 = (*_3);                      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:9: 23:22
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:21: 23:22
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:23:21: 23:22
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:24:5: 24:6
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:24:6: 24:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main_copy.rs:22:5: 24:6
    }
}
