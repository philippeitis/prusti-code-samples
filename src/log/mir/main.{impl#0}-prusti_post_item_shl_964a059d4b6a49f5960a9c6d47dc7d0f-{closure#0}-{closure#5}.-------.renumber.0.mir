// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 318:2>::prusti_post_item_shl_964a059d4b6a49f5960a9c6d47dc7d0f::{closure#0}::{closure#5}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 318:2>::prusti_post_item_shl_964a059d4b6a49f5960a9c6d47dc7d0f::{closure#0}::{closure#5}(_1: &'_#17r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:57]) -> bool {
    debug result => (*((*_1).0: &'_#25r BoolArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:235:5: 266:6
    debug i => (*((*_1).1: &'_#26r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:224:17: 224:18
    debug self => (*((*_1).2: &'_#27r &'_#28r BoolArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:236:12: 236:17
    debug amt => (*((*_1).3: &'_#29r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:236:19: 236:22
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:57
    let mut _2: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:33
    let mut _3: &'_#23r BoolArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:23
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:31: 227:32
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:57
    let mut _6: &'_#24r BoolArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:41
    let mut _7: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56
    let mut _8: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:50
    let mut _9: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:53: 227:56
    let mut _10: (usize, bool);          // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:33
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:23
        _3 = &'_#9r (*((*_1).0: &'_#10r BoolArr32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:23
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:31: 227:32
        _4 = (*((*_1).1: &'_#11r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:31: 227:32
        _2 = BoolArr32::lookup(move _3, move _4) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:33
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:24: 227:30
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr32, usize) -> bool {BoolArr32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:32: 227:33
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:32: 227:33
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:57
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:41
        _6 = &'_#12r (*(*((*_1).2: &'_#13r &'_#14r BoolArr32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:41
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:50
        _8 = (*((*_1).1: &'_#15r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:50
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:53: 227:56
        _9 = (*((*_1).3: &'_#16r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:53: 227:56
        _10 = CheckedSub(_8, _9);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56
        assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", move _8, move _9) -> [success: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56
    }

    bb2: {
        _7 = move (_10.0: usize);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:49: 227:56
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:55: 227:56
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:55: 227:56
        _5 = BoolArr32::lookup(move _6, move _7) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:37: 227:57
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:42: 227:48
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr32, usize) -> bool {BoolArr32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:56: 227:57
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:56: 227:57
        _0 = Eq(move _2, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:57
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:56: 227:57
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:56: 227:57
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:57: 227:57
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:227:17: 227:57
    }
}
