// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_set_bit_9b3132029c08471eaa6de208a0657d2c` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_set_bit_9b3132029c08471eaa6de208a0657d2c(_1: &'_#11r mut BitVec32, _2: usize, _3: bool, _4: ()) -> () {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:20: 52:29
    debug index => _2;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:31: 52:36
    debug val => _3;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:45: 52:48
    debug result => _4;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:5: 58:6
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:5: 52:5
    let _5: [closure@/home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
    let mut _6: &'_#16r &'_#17r mut BitVec32; // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
    let mut _7: &'_#18r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
    let mut _8: &'_#19r bool;            // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40

    bb0: {
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        _6 = &'_#4r _1;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        _7 = &'_#5r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        _8 = &'_#6r _3;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
        _5 = [closure@/home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40] { self: move _6, index: move _7, val: move _8 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:15: 45:40
                                         // closure
                                         // + def_id: DefId(0:25 ~ bitvec32[8787]::{impl#0}::prusti_post_item_set_bit_9b3132029c08471eaa6de208a0657d2c::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#7r &'_#8r mut BitVec32, &'_#9r usize, &'_#10r bool),
                                         // ]
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:39: 45:40
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:39: 45:40
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:39: 45:40
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:45:39: 45:40
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:52:5: 58:6
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:58:6: 58:6
    }
}
