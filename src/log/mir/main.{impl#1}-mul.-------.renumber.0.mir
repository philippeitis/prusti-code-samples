// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::mul` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::mul(_1: &'_#5r BitVec32, _2: &'_#6r BitVec32) -> BitVec32 {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:766:12: 766:17
    debug other => _2;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:766:19: 766:24
    let mut _0: BitVec32;                // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:766:40: 766:48
    let mut _3: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39
    let mut _4: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:29
    let mut _5: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:32: 767:39
    let mut _6: (u32, bool);             // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:29
        _4 = ((*_1).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:29
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:32: 767:39
        _5 = ((*_2).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:32: 767:39
        _6 = CheckedMul(_4, _5);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39
        assert(!move (_6.1: bool), "attempt to compute `{} * {}`, which would overflow", move _4, move _5) -> [success: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39
    }

    bb1: {
        _3 = move (_6.0: u32);           // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:23: 767:39
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:38: 767:39
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:38: 767:39
        _0 = BitVec32 { v: move _3 };    // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:9: 767:41
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:767:40: 767:41
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:768:6: 768:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:766:5: 768:6
    }
}
