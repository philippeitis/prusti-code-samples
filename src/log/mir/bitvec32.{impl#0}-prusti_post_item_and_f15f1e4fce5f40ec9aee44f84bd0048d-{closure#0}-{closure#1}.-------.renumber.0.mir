// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_and_f15f1e4fce5f40ec9aee44f84bd0048d::{closure#0}::{closure#1}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_and_f15f1e4fce5f40ec9aee44f84bd0048d::{closure#0}::{closure#1}(_1: &'_#6r [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:29]) -> bool {
    debug i => (*((*_1).0: &'_#8r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:288:17: 288:18
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:29
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:24

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:24
        _2 = (*((*_1).0: &'_#5r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:24
        _0 = Lt(move _2, const 32_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:23: 289:29
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:28: 289:29
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:289:29: 289:29
    }
}
