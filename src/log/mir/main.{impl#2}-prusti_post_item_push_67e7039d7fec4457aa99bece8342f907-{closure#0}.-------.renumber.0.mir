// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:1: 870:2>::prusti_post_item_push_67e7039d7fec4457aa99bece8342f907::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:1: 870:2>::prusti_post_item_push_67e7039d7fec4457aa99bece8342f907::{closure#0}(_1: &'_#14r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:49]) -> bool {
    debug self => (*((*_1).0: &'_#20r &'_#21r mut PrustiVec)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:830:13: 830:22
    debug val => (*((*_1).1: &'_#22r u8)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:830:24: 830:27
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:49
    let mut _2: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:42
    let mut _3: &'_#18r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:19
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
    let mut _5: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:37
    let mut _6: &'_#19r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:31
    let mut _7: (usize, bool);           // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
    let mut _8: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:46: 824:49

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:42
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:19
        _3 = &'_#7r (*(*((*_1).0: &'_#8r &'_#9r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:19
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:37
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:31
        _6 = &'_#10r (*(*((*_1).0: &'_#11r &'_#12r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:31
        _5 = PrustiVec::len(move _6) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:37
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:32: 824:35
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec) -> usize {PrustiVec::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:36: 824:37
        _7 = CheckedSub(_5, const 1_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
        assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", move _5, const 1_usize) -> [success: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
    }

    bb2: {
        _4 = move (_7.0: usize);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:27: 824:41
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:40: 824:41
        _2 = PrustiVec::lookup(move _3, move _4) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:42
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:20: 824:26
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec, usize) -> u8 {PrustiVec::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:41: 824:42
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:41: 824:42
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:46: 824:49
        _8 = (*((*_1).1: &'_#13r u8));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:46: 824:49
        _0 = Eq(move _2, move _8);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:49
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:48: 824:49
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:48: 824:49
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:49: 824:49
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:824:15: 824:49
    }
}
