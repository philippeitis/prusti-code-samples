// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::shl_v::{closure#2}::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::shl_v::{closure#2}::{closure#0}(_1: &'_#49r [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:133:13: 139:15], _2: usize) -> () {
    debug j => _2;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:134:25: 134:26
    debug i => (*((*_1).0: &'_#87r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:123:13: 123:18
    debug amt => (*((*_1).1: &'_#88r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:121:21: 121:24
    debug out => (*((*_1).2: &'_#89r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:122:13: 122:20
    debug self => (*((*_1).3: &'_#90r &'_#91r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:121:14: 121:19
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:133:13: 133:13
    let _3: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
    let mut _4: &'_#56r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
    let _5: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
    let mut _6: &'_#59r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
    let mut _7: &'_#60r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
    let _8: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
    let mut _9: &'_#63r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
    let mut _10: &'_#64r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
    let _11: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
    let mut _12: &'_#67r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
    let mut _13: &'_#68r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
    let _14: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
    let mut _15: &'_#71r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
    let mut _16: &'_#72r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
    let _17: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
    let mut _18: &'_#75r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
    let mut _19: &'_#76r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
    let _20: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
    let mut _21: &'_#82r BitVec32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
    let mut _22: &'_#83r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
    let mut _23: &'_#84r &'_#85r BitVec32; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
    let mut _24: &'_#86r usize;          // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
        _4 = &'_#9r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
        _3 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28] { j: move _4 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:22: 135:28
                                         // closure
                                         // + def_id: DefId(0:79 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#10r usize,),
                                         // ]
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:27: 135:28
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:27: 135:28
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
        _6 = &'_#11r _2;                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
        _7 = &'_#12r (*((*_1).0: &'_#13r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
        _5 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37] { j: move _6, i: move _7 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:32: 135:37
                                         // closure
                                         // + def_id: DefId(0:80 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#14r usize, &'_#15r usize),
                                         // ]
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:36: 135:37
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:36: 135:37
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:36: 135:37
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
        _9 = &'_#16r _2;                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
        _10 = &'_#17r (*((*_1).1: &'_#18r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
        _8 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49] { j: move _9, amt: move _10 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:41: 135:49
                                         // closure
                                         // + def_id: DefId(0:81 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#2})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#19r usize, &'_#20r usize),
                                         // ]
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:48: 135:49
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:48: 135:49
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:135:48: 135:49
        StorageLive(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
        StorageLive(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
        _12 = &'_#21r (*((*_1).1: &'_#22r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
        StorageLive(_13);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
        _13 = &'_#23r _2;                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
        _11 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33] { amt: move _12, j: move _13 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:25: 136:33
                                         // closure
                                         // + def_id: DefId(0:82 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#3})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#24r usize, &'_#25r usize),
                                         // ]
        StorageDead(_13);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:32: 136:33
        StorageDead(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:32: 136:33
        StorageDead(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:32: 136:33
        StorageLive(_14);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
        StorageLive(_15);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
        _15 = &'_#26r _2;                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
        StorageLive(_16);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
        _16 = &'_#27r (*((*_1).1: &'_#28r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
        _14 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51] { j: move _15, amt: move _16 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:37: 136:51
                                         // closure
                                         // + def_id: DefId(0:83 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#4})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#29r usize, &'_#30r usize),
                                         // ]
        StorageDead(_16);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:50: 136:51
        StorageDead(_15);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:50: 136:51
        StorageDead(_14);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:50: 136:51
        StorageLive(_17);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
        StorageLive(_18);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
        _18 = &'_#31r _2;                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
        StorageLive(_19);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
        _19 = &'_#32r (*((*_1).1: &'_#33r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
        _17 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69] { j: move _18, amt: move _19 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:55: 136:69
                                         // closure
                                         // + def_id: DefId(0:84 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#5})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#34r usize, &'_#35r usize),
                                         // ]
        StorageDead(_19);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:68: 136:69
        StorageDead(_18);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:68: 136:69
        StorageDead(_17);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:136:68: 136:69
        StorageLive(_20);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        StorageLive(_21);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        _21 = &'_#36r (*((*_1).2: &'_#37r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        StorageLive(_22);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        _22 = &'_#38r _2;                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        StorageLive(_23);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        _23 = &'_#39r (*((*_1).3: &'_#40r &'_#41r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        StorageLive(_24);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        _24 = &'_#42r (*((*_1).1: &'_#43r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
        _20 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62] { out: move _21, j: move _22, self: move _23, amt: move _24 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:25: 137:62
                                         // closure
                                         // + def_id: DefId(0:85 ~ bitvec32[8787]::{impl#0}::shl_v::{closure#2}::{closure#0}::{closure#6})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#44r BitVec32, &'_#45r usize, &'_#46r &'_#47r BitVec32, &'_#48r usize),
                                         // ]
        StorageDead(_24);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:61: 137:62
        StorageDead(_23);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:61: 137:62
        StorageDead(_22);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:61: 137:62
        StorageDead(_21);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:61: 137:62
        StorageDead(_20);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:137:61: 137:62
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:133:13: 139:15
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:139:15: 139:15
    }
}
