// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:773:1: 821:2>::prusti_post_item_append_9be00483b06941e6998f73438d7cc84e::{closure#0}::{closure#1}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:773:1: 821:2>::prusti_post_item_append_9be00483b06941e6998f73438d7cc84e::{closure#0}::{closure#1}(_1: &'_#11r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:39]) -> bool {
    debug i => (*((*_1).0: &'_#16r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:802:17: 802:18
    debug other => (*((*_1).1: &'_#17r &'_#18r PrustiVec)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:807:26: 807:31
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:39
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:25
    let mut _3: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:39
    let mut _4: &'_#15r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:33

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:25
        _2 = (*((*_1).0: &'_#7r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:25
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:39
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:33
        _4 = &'_#8r (*(*((*_1).1: &'_#9r &'_#10r PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:33
        _3 = PrustiVec::len(move _4) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:28: 803:39
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:34: 803:37
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec) -> usize {PrustiVec::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:38: 803:39
        _0 = Lt(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:39
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:38: 803:39
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:38: 803:39
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:39: 803:39
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:803:24: 803:39
    }
}
