// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_reverse_bits_372398cfcf2c4acc8a5c2905fa1e394c` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_reverse_bits_372398cfcf2c4acc8a5c2905fa1e394c(_1: &'_#9r BitVec32, _2: BitVec32) -> () {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:103:21: 103:26
    debug result => _2;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:94:5: 105:6
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:94:5: 94:5
    let _3: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
    let mut _4: &'_#13r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
    let mut _5: &'_#14r &'_#15r BitVec32; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
        _4 = &'_#4r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
        _5 = &'_#5r _1;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
        _3 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15] { result: move _4, self: move _5 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:5: 97:15
                                         // closure
                                         // + def_id: DefId(0:48 ~ bitvec32[8787]::{impl#0}::prusti_post_item_reverse_bits_372398cfcf2c4acc8a5c2905fa1e394c::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((usize,)),
                                         //     (&'_#6r BitVec32, &'_#7r &'_#8r BitVec32),
                                         // ]
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:14: 97:15
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:14: 97:15
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:97:14: 97:15
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:94:5: 105:6
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:105:6: 105:6
    }
}
