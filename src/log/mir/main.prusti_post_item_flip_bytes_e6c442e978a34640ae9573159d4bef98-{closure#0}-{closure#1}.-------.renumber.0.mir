// MIR for `prusti_post_item_flip_bytes_e6c442e978a34640ae9573159d4bef98::{closure#0}::{closure#1}` 0 renumber

fn prusti_post_item_flip_bytes_e6c442e978a34640ae9573159d4bef98::{closure#0}::{closure#1}(_1: &'_#9r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:31]) -> bool {
    debug i => (*((*_1).0: &'_#13r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:194:13: 194:14
    debug a => (*((*_1).1: &'_#14r BoolArr)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:198:15: 198:16
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:31
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:21
    let mut _3: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:31
    let mut _4: &'_#12r BoolArr;         // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:25

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:21
        _2 = (*((*_1).0: &'_#6r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:21
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:31
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:25
        _4 = &'_#7r (*((*_1).1: &'_#8r BoolArr)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:25
        _3 = BoolArr::len(move _4) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:24: 195:31
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:26: 195:29
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr) -> usize {BoolArr::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:30: 195:31
        _0 = Lt(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:31
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:30: 195:31
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:30: 195:31
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:31: 195:31
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:20: 195:31
    }
}
