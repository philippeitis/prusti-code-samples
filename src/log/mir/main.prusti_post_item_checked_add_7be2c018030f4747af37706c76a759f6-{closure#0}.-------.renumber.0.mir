// MIR for `prusti_post_item_checked_add_7be2c018030f4747af37706c76a759f6::{closure#0}` 0 renumber

fn prusti_post_item_checked_add_7be2c018030f4747af37706c76a759f6::{closure#0}(_1: &'_#14r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:65]) -> bool {
    debug result => (*((*_1).0: &'_#20r std::option::Option<u32>)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:101:1: 107:2
    debug a => (*((*_1).1: &'_#21r u32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:101:16: 101:17
    debug b => (*((*_1).2: &'_#22r u32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:101:24: 101:25
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:65
    let mut _2: &'_#18r std::option::Option<u32>; // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:11
    let mut _3: &'_#19r std::option::Option<u32>; // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
    let _4: std::option::Option<u32>;    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:35
    let mut _6: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:19
    let mut _7: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
    let mut _8: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
    let mut _9: (u32, bool);             // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
    let mut _10: u32;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48
    let mut _11: u32;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:44
    let mut _12: u32;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:47: 99:48
    let mut _13: (u32, bool);            // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:11
        _2 = &'_#7r (*((*_1).0: &'_#8r std::option::Option<u32>)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:11
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:35
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:19
        _6 = (*((*_1).1: &'_#9r u32));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:19
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
        _8 = (*((*_1).2: &'_#10r u32));  // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
        _9 = CheckedSub(const core::num::<impl u32>::MAX, _8); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
        assert(!move (_9.1: bool), "attempt to compute `{} - {}`, which would overflow", const core::num::<impl u32>::MAX, move _8) -> [success: bb1, unwind: bb7]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
    }

    bb1: {
        _7 = move (_9.0: u32);           // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:23: 99:35
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
        _5 = Le(move _6, move _7);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:18: 99:35
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:34: 99:35
        switchInt(move _5) -> [false: bb3, otherwise: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
    }

    bb2: {
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48
        StorageLive(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:44
        _11 = (*((*_1).1: &'_#11r u32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:44
        StorageLive(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:47: 99:48
        _12 = (*((*_1).2: &'_#12r u32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:47: 99:48
        _13 = CheckedAdd(_11, _12);      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48
        assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, move _12) -> [success: bb4, unwind: bb7]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48
    }

    bb3: {
        _4 = std::option::Option::<u32>::None; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:59: 99:63
        goto -> bb5;                     // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
    }

    bb4: {
        _10 = move (_13.0: u32);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:43: 99:48
        StorageDead(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:47: 99:48
        StorageDead(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:47: 99:48
        _4 = std::option::Option::<u32>::Some(move _10); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:38: 99:49
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:48: 99:49
        goto -> bb5;                     // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
    }

    bb5: {
        _3 = &'_#13r _4;                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:15: 99:65
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:64: 99:65
        _0 = <std::option::Option<u32> as std::cmp::PartialEq>::eq(move _2, move _3) -> [return: bb6, unwind: bb7]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:65
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:65
                                         // + literal: Const { ty: for<'r, 's> fn(&'r std::option::Option<u32>, &'s std::option::Option<u32>) -> bool {<std::option::Option<u32> as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:64: 99:65
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:64: 99:65
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:64: 99:65
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:65: 99:65
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:99:5: 99:65
    }
}
