// MIR for `prusti_post_item_max_range_aa54555ddce04f11adabe08f3bd650a8::{closure#0}` 0 renumber

fn prusti_post_item_max_range_aa54555ddce04f11adabe08f3bd650a8::{closure#0}(_1: &'_#10r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:42]) -> bool {
    debug result => (*((*_1).0: &'_#14r i32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:30:1: 39:2
    debug a => (*((*_1).1: &'_#15r i32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:30:14: 30:15
    debug b => (*((*_1).2: &'_#16r i32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:30:22: 30:23
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:42
    let mut _2: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:17
    let mut _3: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42
    let mut _4: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:38
    let mut _5: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:28: 29:37
    let mut _6: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:32: 29:33
    let mut _7: i32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:35: 29:36
    let mut _8: (i32, bool);             // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:17
        _2 = (*((*_1).0: &'_#7r i32));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:17
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:38
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:28: 29:37
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:32: 29:33
        _6 = (*((*_1).1: &'_#8r i32));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:32: 29:33
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:35: 29:36
        _7 = (*((*_1).2: &'_#9r i32));   // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:35: 29:36
        _5 = max(move _6, move _7) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:28: 29:37
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:28: 29:31
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {max}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:36: 29:37
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:36: 29:37
        _4 = max(const 1_i32, move _5) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:38
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:24
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {max}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:37: 29:38
        _8 = CheckedSub(_4, const 1_i32); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42
        assert(!move (_8.1: bool), "attempt to compute `{} - {}`, which would overflow", move _4, const 1_i32) -> [success: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42
    }

    bb3: {
        _3 = move (_8.0: i32);           // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:21: 29:42
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:41: 29:42
        _0 = Eq(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:42
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:41: 29:42
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:41: 29:42
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:42: 29:42
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:29:11: 29:42
    }
}
