// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 319:2>::prusti_post_item_shr_038ee53c9472413eb7562f0a3de2bed2::{closure#0}::{closure#5}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 319:2>::prusti_post_item_shr_038ee53c9472413eb7562f0a3de2bed2::{closure#0}::{closure#5}(_1: &'_#17r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:57]) -> bool {
    debug result => (*((*_1).0: &'_#25r BoolArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:281:5: 317:6
    debug i => (*((*_1).1: &'_#26r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:270:17: 270:18
    debug amt => (*((*_1).2: &'_#27r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:284:19: 284:22
    debug self => (*((*_1).3: &'_#28r &'_#29r BoolArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:284:12: 284:17
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:57
    let mut _2: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:39
    let mut _3: &'_#23r BoolArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:23
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
    let mut _5: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:32
    let mut _6: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:35: 273:38
    let mut _7: (usize, bool);           // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
    let mut _8: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:57
    let mut _9: &'_#24r BoolArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:47
    let mut _10: usize;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:55: 273:56

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:39
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:23
        _3 = &'_#9r (*((*_1).0: &'_#10r BoolArr32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:23
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:32
        _5 = (*((*_1).1: &'_#11r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:32
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:35: 273:38
        _6 = (*((*_1).2: &'_#12r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:35: 273:38
        _7 = CheckedSub(_5, _6);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
        assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", move _5, move _6) -> [success: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
    }

    bb1: {
        _4 = move (_7.0: usize);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:31: 273:38
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:37: 273:38
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:37: 273:38
        _2 = BoolArr32::lookup(move _3, move _4) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:39
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:24: 273:30
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr32, usize) -> bool {BoolArr32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:38: 273:39
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:38: 273:39
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:57
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:47
        _9 = &'_#13r (*(*((*_1).3: &'_#14r &'_#15r BoolArr32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:47
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:55: 273:56
        _10 = (*((*_1).1: &'_#16r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:55: 273:56
        _8 = BoolArr32::lookup(move _9, move _10) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:43: 273:57
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:48: 273:54
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr32, usize) -> bool {BoolArr32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:56: 273:57
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:56: 273:57
        _0 = Eq(move _2, move _8);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:57
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:56: 273:57
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:56: 273:57
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:57: 273:57
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:273:17: 273:57
    }
}
