// MIR for `prusti_post_item_flip_bytes_e6c442e978a34640ae9573159d4bef98::{closure#0}::{closure#2}` 0 renumber

fn prusti_post_item_flip_bytes_e6c442e978a34640ae9573159d4bef98::{closure#0}::{closure#2}(_1: &'_#15r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:81]) -> bool {
    debug result => (*((*_1).0: &'_#22r BoolArr)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:186:1: 219:2
    debug i => (*((*_1).1: &'_#23r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:194:13: 194:14
    debug a => (*((*_1).2: &'_#24r BoolArr)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:198:15: 198:16
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:81
    let mut _2: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:52
    let mut _3: &'_#19r BoolArr;         // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:42
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:50: 195:51
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:81
    let mut _6: &'_#20r BoolArr;         // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:57
    let mut _7: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80
    let mut _8: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
    let mut _9: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:72
    let mut _10: &'_#21r BoolArr;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:66
    let mut _11: (usize, bool);          // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
    let mut _12: usize;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:79: 195:80
    let mut _13: (usize, bool);          // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:52
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:42
        _3 = &'_#7r (*((*_1).0: &'_#8r BoolArr)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:42
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:50: 195:51
        _4 = (*((*_1).1: &'_#9r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:50: 195:51
        _2 = BoolArr::lookup(move _3, move _4) -> [return: bb1, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:52
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:43: 195:49
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr, usize) -> bool {BoolArr::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:51: 195:52
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:51: 195:52
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:81
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:57
        _6 = &'_#10r (*((*_1).2: &'_#11r BoolArr)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:57
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:72
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:66
        _10 = &'_#12r (*((*_1).2: &'_#13r BoolArr)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:66
        _9 = BoolArr::len(move _10) -> [return: bb2, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:72
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:67: 195:70
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr) -> usize {BoolArr::len}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:71: 195:72
        _11 = CheckedSub(_9, const 1_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
        assert(!move (_11.1: bool), "attempt to compute `{} - {}`, which would overflow", move _9, const 1_usize) -> [success: bb3, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
    }

    bb3: {
        _8 = move (_11.0: usize);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:76
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:75: 195:76
        StorageLive(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:79: 195:80
        _12 = (*((*_1).1: &'_#14r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:79: 195:80
        _13 = CheckedSub(_8, _12);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80
        assert(!move (_13.1: bool), "attempt to compute `{} - {}`, which would overflow", move _8, move _12) -> [success: bb4, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80
    }

    bb4: {
        _7 = move (_13.0: usize);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:65: 195:80
        StorageDead(_12);                // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:79: 195:80
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:79: 195:80
        _5 = BoolArr::lookup(move _6, move _7) -> [return: bb5, unwind: bb6]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:56: 195:81
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:58: 195:64
                                         // + literal: Const { ty: for<'r> fn(&'r BoolArr, usize) -> bool {BoolArr::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:80: 195:81
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:80: 195:81
        _0 = Eq(move _2, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:81
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:80: 195:81
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:80: 195:81
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:81: 195:81
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:195:36: 195:81
    }
}
