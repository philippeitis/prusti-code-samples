// MIR for `shl::{closure#1}::{closure#0}::{closure#2}` 0 renumber

fn shl::{closure#1}::{closure#0}::{closure#2}(_1: &'_#6r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:45]) -> bool {
    debug j => (*((*_1).0: &'_#8r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:249:21: 249:22
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:45
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:40

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:40
        _2 = (*((*_1).0: &'_#5r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:40
        _0 = Lt(move _2, const 32_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:39: 250:45
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:44: 250:45
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:250:45: 250:45
    }
}
