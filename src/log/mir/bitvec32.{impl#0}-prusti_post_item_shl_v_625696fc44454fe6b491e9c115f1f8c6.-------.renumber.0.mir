// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_shl_v_625696fc44454fe6b491e9c115f1f8c6` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_shl_v_625696fc44454fe6b491e9c115f1f8c6(_1: &'_#8r BitVec32, _2: usize, _3: BitVec32) -> () {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:121:14: 121:19
    debug amt => _2;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:121:21: 121:24
    debug result => _3;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:120:5: 151:6
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:120:5: 120:5
    let _4: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
    let mut _5: &'_#11r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
    let mut _6: &'_#12r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26

    bb0: {
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
        _5 = &'_#4r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
        _6 = &'_#5r _3;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
        _4 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26] { amt: move _5, result: move _6 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:5: 107:26
                                         // closure
                                         // + def_id: DefId(0:64 ~ bitvec32[8787]::{impl#0}::prusti_post_item_shl_v_625696fc44454fe6b491e9c115f1f8c6::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((usize,)),
                                         //     (&'_#6r usize, &'_#7r BitVec32),
                                         // ]
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:25: 107:26
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:25: 107:26
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:107:25: 107:26
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:120:5: 151:6
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:151:6: 151:6
    }
}
