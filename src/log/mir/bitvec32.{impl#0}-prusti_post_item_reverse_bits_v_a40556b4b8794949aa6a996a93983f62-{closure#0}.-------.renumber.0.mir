// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_reverse_bits_v_a40556b4b8794949aa6a996a93983f62::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_reverse_bits_v_a40556b4b8794949aa6a996a93983f62::{closure#0}(_1: &'_#21r [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:67:5: 71:7], _2: usize) -> () {
    debug i => _2;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:68:17: 68:18
    debug result => (*((*_1).0: &'_#37r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:60:5: 92:6
    debug self => (*((*_1).1: &'_#38r &'_#39r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:72:23: 72:28
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:67:5: 67:5
    let _3: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
    let mut _4: &'_#26r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
    let _5: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
    let mut _6: &'_#28r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
    let _7: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
    let mut _8: &'_#33r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
    let mut _9: &'_#34r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
    let mut _10: &'_#35r &'_#36r BitVec32; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
        _4 = &'_#7r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
        _3 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20] { i: move _4 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:14: 69:20
                                         // closure
                                         // + def_id: DefId(0:35 ~ bitvec32[8787]::{impl#0}::prusti_post_item_reverse_bits_v_a40556b4b8794949aa6a996a93983f62::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#8r usize,),
                                         // ]
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:19: 69:20
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:19: 69:20
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
        _6 = &'_#9r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
        _5 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30] { i: move _6 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:24: 69:30
                                         // closure
                                         // + def_id: DefId(0:36 ~ bitvec32[8787]::{impl#0}::prusti_post_item_reverse_bits_v_a40556b4b8794949aa6a996a93983f62::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#10r usize,),
                                         // ]
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:29: 69:30
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:29: 69:30
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        _8 = &'_#11r (*((*_1).0: &'_#12r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        _9 = &'_#13r _2;                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        _10 = &'_#14r (*((*_1).1: &'_#15r &'_#16r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
        _7 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74] { result: move _8, i: move _9, self: move _10 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:35: 69:74
                                         // closure
                                         // + def_id: DefId(0:37 ~ bitvec32[8787]::{impl#0}::prusti_post_item_reverse_bits_v_a40556b4b8794949aa6a996a93983f62::{closure#0}::{closure#2})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#17r BitVec32, &'_#18r usize, &'_#19r &'_#20r BitVec32),
                                         // ]
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:73: 69:74
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:73: 69:74
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:73: 69:74
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:69:73: 69:74
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:67:5: 71:7
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:71:7: 71:7
    }
}
