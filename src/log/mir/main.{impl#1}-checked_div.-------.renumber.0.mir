// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::checked_div` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:442:1: 784:2>::checked_div(_1: &'_#5r BitVec32, _2: &'_#6r BitVec32) -> BitVec32 {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:780:20: 780:25
    debug other => _2;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:780:27: 780:32
    let mut _0: BitVec32;                // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:780:48: 780:56
    let mut _3: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39
    let mut _4: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:29
    let mut _5: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:32: 781:39
    let mut _6: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:29
        _4 = ((*_1).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:29
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:32: 781:39
        _5 = ((*_2).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:32: 781:39
        _6 = Eq(_5, const 0_u32);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39
        assert(!move _6, "attempt to divide `{}` by zero", _4) -> [success: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39
    }

    bb1: {
        _3 = Div(move _4, move _5);      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:23: 781:39
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:38: 781:39
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:38: 781:39
        _0 = BitVec32 { v: move _3 };    // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:9: 781:41
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:781:40: 781:41
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:782:6: 782:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:780:5: 782:6
    }
}
