// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::xor_v::{closure#1}::{closure#0}::{closure#2}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::xor_v::{closure#1}::{closure#0}::{closure#2}(_1: &'_#21r [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:72]) -> bool {
    debug out => (*((*_1).0: &'_#31r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:302:13: 302:20
    debug j => (*((*_1).1: &'_#32r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:306:37: 306:38
    debug self => (*((*_1).2: &'_#33r &'_#34r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:301:14: 301:19
    debug other => (*((*_1).3: &'_#35r &'_#36r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:301:21: 301:26
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:72
    let mut _2: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:34
    let mut _3: &'_#28r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:24
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:32: 308:33
    let mut _5: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:38: 308:72
    let mut _6: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:53
    let mut _7: &'_#29r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:43
    let mut _8: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:51: 308:52
    let mut _9: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:71
    let mut _10: &'_#30r BitVec32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:61
    let mut _11: usize;                  // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:69: 308:70

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:34
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:24
        _3 = &'_#10r (*((*_1).0: &'_#11r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:24
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:32: 308:33
        _4 = (*((*_1).1: &'_#12r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:32: 308:33
        _2 = BitVec32::lookup(move _3, move _4) -> [return: bb1, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:34
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:25: 308:31
                                         // + literal: Const { ty: for<'r> fn(&'r BitVec32, usize) -> bool {BitVec32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:33: 308:34
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:33: 308:34
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:38: 308:72
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:53
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:43
        _7 = &'_#13r (*(*((*_1).2: &'_#14r &'_#15r BitVec32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:43
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:51: 308:52
        _8 = (*((*_1).1: &'_#16r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:51: 308:52
        _6 = BitVec32::lookup(move _7, move _8) -> [return: bb2, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:39: 308:53
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:44: 308:50
                                         // + literal: Const { ty: for<'r> fn(&'r BitVec32, usize) -> bool {BitVec32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:52: 308:53
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:52: 308:53
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:71
        StorageLive(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:61
        _10 = &'_#17r (*(*((*_1).3: &'_#18r &'_#19r BitVec32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:61
        StorageLive(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:69: 308:70
        _11 = (*((*_1).1: &'_#20r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:69: 308:70
        _9 = BitVec32::lookup(move _10, move _11) -> [return: bb3, unwind: bb4]; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:56: 308:71
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:62: 308:68
                                         // + literal: Const { ty: for<'r> fn(&'r BitVec32, usize) -> bool {BitVec32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_11);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:70: 308:71
        StorageDead(_10);                // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:70: 308:71
        _5 = BitXor(move _6, move _9);   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:38: 308:72
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:71: 308:72
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:71: 308:72
        _0 = Eq(move _2, move _5);       // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:72
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:71: 308:72
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:71: 308:72
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:72: 308:72
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:308:21: 308:72
    }
}
