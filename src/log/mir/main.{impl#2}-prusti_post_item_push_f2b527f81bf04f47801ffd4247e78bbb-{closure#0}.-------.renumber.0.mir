// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:1: 863:2>::prusti_post_item_push_f2b527f81bf04f47801ffd4247e78bbb::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:790:1: 863:2>::prusti_post_item_push_f2b527f81bf04f47801ffd4247e78bbb::{closure#0}(_1: &'_#12r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:48]) -> bool {
    debug self => (*((*_1).0: &'_#17r &'_#18r mut PrustiVec)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:829:13: 829:22
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:48
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:25
    let mut _3: &'_#15r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:19
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48
    let mut _5: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:44
    let mut _6: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:43
    let mut _7: &'_#16r PrustiVec;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:37
    let mut _8: (usize, bool);           // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:25
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:19
        _3 = &'_#6r (*(*((*_1).0: &'_#7r &'_#8r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:19
        _2 = PrustiVec::len(move _3) -> [return: bb1, unwind: bb5]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:25
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:20: 820:23
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec) -> usize {PrustiVec::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:24: 820:25
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:44
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:43
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:37
        _7 = &'_#9r (*(*((*_1).0: &'_#10r &'_#11r mut PrustiVec))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:37
        _6 = PrustiVec::len(move _7) -> [return: bb2, unwind: bb5]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:33: 820:43
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:38: 820:41
                                         // + literal: Const { ty: for<'r> fn(&'r PrustiVec) -> usize {PrustiVec::len}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:42: 820:43
        _5 = prusti_contracts::old::<usize>(move _6) -> [return: bb3, unwind: bb5]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:44
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:32
                                         // + literal: Const { ty: fn(usize) -> usize {prusti_contracts::old::<usize>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:43: 820:44
        _8 = CheckedAdd(_5, const 1_usize); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, const 1_usize) -> [success: bb4, unwind: bb5]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48
    }

    bb4: {
        _4 = move (_8.0: usize);         // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:29: 820:48
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:47: 820:48
        _0 = Eq(move _2, move _4);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:48
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:47: 820:48
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:47: 820:48
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:48: 820:48
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:820:15: 820:48
    }
}
