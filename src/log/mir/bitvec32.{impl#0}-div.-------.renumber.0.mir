// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:8:1: 350:2>::div` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:8:1: 350:2>::div(_1: &'_#5r BitVec32, _2: &'_#6r BitVec32) -> BitVec32 {
    debug self => _1;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:338:12: 338:17
    debug other => _2;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:338:19: 338:24
    let mut _0: BitVec32;                // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:338:40: 338:48
    let mut _3: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39
    let mut _4: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:29
    let mut _5: u32;                     // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:32: 339:39
    let mut _6: bool;                    // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:29
        _4 = ((*_1).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:29
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:32: 339:39
        _5 = ((*_2).0: u32);             // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:32: 339:39
        _6 = Eq(_5, const 0_u32);        // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39
        assert(!move _6, "attempt to divide `{}` by zero", _4) -> [success: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39
    }

    bb1: {
        _3 = Div(move _4, move _5);      // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:23: 339:39
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:38: 339:39
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:38: 339:39
        _0 = BitVec32 { v: move _3 };    // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:9: 339:41
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:339:40: 339:41
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:340:6: 340:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/bitvec32.rs:338:5: 340:6
    }
}
