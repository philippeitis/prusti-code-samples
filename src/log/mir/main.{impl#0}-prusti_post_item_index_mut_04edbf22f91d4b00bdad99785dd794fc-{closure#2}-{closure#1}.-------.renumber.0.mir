// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 175:2>::prusti_post_item_index_mut_04edbf22f91d4b00bdad99785dd794fc::{closure#2}::{closure#1}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 175:2>::prusti_post_item_index_mut_04edbf22f91d4b00bdad99785dd794fc::{closure#2}::{closure#1}(_1: &'_#11r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:49]) -> bool {
    debug i => (*((*_1).0: &'_#16r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:14: 168:15
    debug self => (*((*_1).1: &'_#17r &'_#18r mut ByteArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:172:22: 172:31
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:49
    let mut _2: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:36
    let mut _3: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:49
    let mut _4: &'_#15r ByteArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:43

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:36
        _2 = (*((*_1).0: &'_#7r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:36
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:49
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:43
        _4 = &'_#8r (*(*((*_1).1: &'_#9r &'_#10r mut ByteArr32))); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:43
        _3 = ByteArr32::len(move _4) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:39: 168:49
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:44: 168:47
                                         // + literal: Const { ty: for<'r> fn(&'r ByteArr32) -> usize {ByteArr32::len}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:48: 168:49
        _0 = Lt(move _2, move _3);       // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:49
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:48: 168:49
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:48: 168:49
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:49: 168:49
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:168:35: 168:49
    }
}
