// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 186:2>::prusti_post_item_zero_58bc000eb43a4f87b3e85aa4ad1293ae::{closure#0}::{closure#2}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:145:1: 186:2>::prusti_post_item_zero_58bc000eb43a4f87b3e85aa4ad1293ae::{closure#0}::{closure#2}(_1: &'_#9r [closure@/home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:56]) -> bool {
    debug result => (*((*_1).0: &'_#13r ByteArr32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:153:5: 155:6
    debug i => (*((*_1).1: &'_#14r usize)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:149:17: 149:18
    let mut _0: bool;                    // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:56
    let mut _2: u8;                      // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:51
    let mut _3: &'_#12r ByteArr32;       // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:41
    let mut _4: usize;                   // in scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:49: 150:50

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:51
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:41
        _3 = &'_#6r (*((*_1).0: &'_#7r ByteArr32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:41
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:49: 150:50
        _4 = (*((*_1).1: &'_#8r usize)); // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:49: 150:50
        _2 = ByteArr32::lookup(move _3, move _4) -> [return: bb1, unwind: bb2]; // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:51
                                         // mir::Constant
                                         // + span: /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:42: 150:48
                                         // + literal: Const { ty: for<'r> fn(&'r ByteArr32, usize) -> u8 {ByteArr32::lookup}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:50: 150:51
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:50: 150:51
        _0 = Eq(move _2, const 0_u8);    // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:56
        StorageDead(_2);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:55: 150:56
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:56: 150:56
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_0/src/main.rs:150:35: 150:56
    }
}
