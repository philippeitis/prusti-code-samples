// MIR for `<impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_zero_351131d2108e432e9e4d491195bd1b3a::{closure#0}` 0 renumber

fn <impl at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:8:1: 350:2>::prusti_post_item_zero_351131d2108e432e9e4d491195bd1b3a::{closure#0}(_1: &'_#14r [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:11:5: 11:15], _2: usize) -> () {
    debug i => _2;                       // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:13:17: 13:18
    debug result => (*((*_1).0: &'_#24r BitVec32)); // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:9:5: 19:6
    let mut _0: ();                      // return place in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:11:5: 11:5
    let _3: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
    let mut _4: &'_#17r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
    let _5: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
    let mut _6: &'_#19r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
    let _7: [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52]; // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
    let mut _8: &'_#22r BitVec32;        // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
    let mut _9: &'_#23r usize;           // in scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
        StorageLive(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
        _4 = &'_#5r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
        _3 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20] { i: move _4 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:14: 14:20
                                         // closure
                                         // + def_id: DefId(0:10 ~ bitvec32[8787]::{impl#0}::prusti_post_item_zero_351131d2108e432e9e4d491195bd1b3a::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#6r usize,),
                                         // ]
        StorageDead(_4);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:19: 14:20
        StorageDead(_3);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:19: 14:20
        StorageLive(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
        StorageLive(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
        _6 = &'_#7r _2;                  // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
        _5 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30] { i: move _6 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:24: 14:30
                                         // closure
                                         // + def_id: DefId(0:11 ~ bitvec32[8787]::{impl#0}::prusti_post_item_zero_351131d2108e432e9e4d491195bd1b3a::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#8r usize,),
                                         // ]
        StorageDead(_6);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:29: 14:30
        StorageDead(_5);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:29: 14:30
        StorageLive(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
        StorageLive(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
        _8 = &'_#9r (*((*_1).0: &'_#10r BitVec32)); // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
        StorageLive(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
        _9 = &'_#11r _2;                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
        _7 = [closure@/home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52] { result: move _8, i: move _9 }; // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:35: 14:52
                                         // closure
                                         // + def_id: DefId(0:12 ~ bitvec32[8787]::{impl#0}::prusti_post_item_zero_351131d2108e432e9e4d491195bd1b3a::{closure#0}::{closure#2})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> bool,
                                         //     (&'_#12r BitVec32, &'_#13r usize),
                                         // ]
        StorageDead(_9);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:51: 14:52
        StorageDead(_8);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:51: 14:52
        StorageDead(_7);                 // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:14:51: 14:52
        _0 = const ();                   // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:11:5: 11:15
        return;                          // scope 0 at /home/philippe/VSCodeProjects/prusti_code_samples/src/bitvec32.rs:11:15: 11:15
    }
}
